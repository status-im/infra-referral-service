---
# required service env variables
referral_srv_public_domain: '{{ stage }}-referral.status.im'
referral_srv_public_port: 443
referral_srv_public_protocol: 'https'

# Use image depending on stage
referral_srv_app_tag: 'deploy-{{ stage }}'

# Google Sign-In
referral_srv_google_sign_in_client_id: '{{lookup("passwordstore", "services/referral-service/"+stage+"/google/sign-in-client-id")}}'
referral_srv_google_sign_in_client_secret: '{{lookup("passwordstore", "services/referral-service/"+stage+"/google/sign-in-client-secret")}}'

# Ethereum contract
referral_srv_eth_http_endpoint: '{{lookup("passwordstore", "services/referral-service/"+stage+"/eth/endpoint")}}'
referral_srv_eth_contract_address: '{{lookup("passwordstore", "services/referral-service/"+stage+"/eth/contract-addr")}}'
referral_srv_eth_contract_name: '{{lookup("passwordstore", "services/referral-service/"+stage+"/eth/contract-name")}}'
referral_srv_eth_private_key: '{{lookup("passwordstore", "services/referral-service/"+stage+"/eth/priv-key")}}'

# Rails secret key base
referral_srv_secret_key_base: '{{lookup("passwordstore", "services/referral-service/"+stage+"/secret-key-base")}}'
# The salt for the hashing of ips
referral_srv_ip_salt: '{{lookup("passwordstore", "services/referral-service/"+stage+"/ip-salt")}}'

# GeoIP API Auth
referral_srv_geoip_account_id: '{{lookup("passwordstore", "services/referral-service/"+stage+"/geoip/account-id")}}'
referral_srv_geoip_license_key: '{{lookup("passwordstore", "services/referral-service/"+stage+"/geoip/license-key")}}'
# NOTE: For now we don't do campaigns in US so we disable GeoIP to save money.
referral_srv_geoip_enabled: false

# Referral Service API port
referral_srv_app_port: 3000

# add a swap file to avoid memory issues when syncing
swap_file_size_mb: 2048

# Restic Backups
restic_user_groups: ['dockremap']
restic_backups:
  - name: 'referral-db'
    path: '{{ referral_srv_db_vol }}/backup'
    tags: ['pgdumpdir']
    after: '{{ referral_srv_db_backup_name }}.service'
    frequency: 'daily'

# Open Nginx Ports
open_ports_default_comment: 'HTTP & HTTPS'
open_ports_list: [ {port: 80}, {port: 443} ]

# With large volume of requests more workers are required.
nginx_worker_rlimit_nofile: 4098
nginx_events_params:
 - worker_connections 2048

# Proxy for WSGI server assumed to run on port 8000
nginx_sites:
  referral_service:
    - listen 443 ssl

    - server_name {{ stage }}.starter-pack.status.im get.status.im

    - ssl_certificate     /certs/status.im/origin.crt
    - ssl_certificate_key /certs/status.im/origin.key

    - location = / {
        return 302 https://status.im/get/;
      }

    - location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 3600;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffers 16 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
        proxy_max_temp_file_size 2048m;
        proxy_temp_file_write_size 512k;
        proxy_pass http://localhost:{{ referral_srv_app_port }}/;
      }
