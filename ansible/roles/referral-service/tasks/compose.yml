---
- name: 'Create container config: {{ referral_srv_service_name }}'
  set_fact:
    referral_srv_compose:
      version: '3.7'
      services:
        app:
          container_name: '{{ referral_srv_app_name }}'
          image: '{{ referral_srv_app_image }}'
          restart: 'always'
          env_file: '{{ referral_srv_service_path }}/app.env'
          labels:
            # automatic image updates
            com.centurylinklabs.watchtower.enable: 'true'
            com.centurylinklabs.watchtower.lifecycle.post-update: 'rake db:migrate'
          ports:
            - '{{ referral_srv_app_port }}:{{ referral_srv_app_port }}/tcp'
          volumes:
            - '{{ referral_srv_app_vol }}:/data'
          depends_on:
            - 'db'
            - 'cache'
            - 'queue'

        # Migrations need to run before the app
        migrate:
          container_name: '{{ referral_srv_service_name }}-migrate'
          image: '{{ referral_srv_app_image }}'
          env_file: '{{ referral_srv_service_path }}/app.env'
          command: 'rake db:migrate'
          volumes:
            - '{{ referral_srv_app_vol }}:/data'
          depends_on:
            - 'db'

        queue:
          container_name: '{{ referral_srv_queue_name }}'
          image: '{{ referral_srv_queue_image }}'
          restart: 'always'
          env_file: '{{ referral_srv_service_path }}/app.env'
          command: 'sidekiq'
          labels:
            # automatic image updates
            com.centurylinklabs.watchtower.enable: 'true'
          depends_on:
            - 'db'
            - 'cache'

        db:
          container_name: '{{ referral_srv_db_cont_name }}'
          image: '{{ referral_srv_db_image }}'
          user: root
          restart: 'always'
          env_file: '{{ referral_srv_service_path }}/db.env'
          tmpfs:
            - '/run/postgresql'
            - '/tmp'
          volumes:
            - '{{ referral_srv_db_vol }}:/var/lib/postgresql/data'

        cache:
          container_name: '{{ referral_srv_cache_name }}'
          image: '{{ referral_srv_cache_image }}'
          restart: 'always'
          # docker-entrypoint.sh tries to chown /data which will not work
          entrypoint: redis-server
          volumes:
            - '{{ referral_srv_cache_vol }}:/data'
